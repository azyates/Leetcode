class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        
        //Sort and work from ends - nLogn time... Doesn't keep indices
        
        //Check hashmap for solution, if it doesn't exist, add to hashmap
        
        vector<int> answer(2);
        answer[0]=-1;
        answer[1]=-1;
        
        unordered_map<int, int> map;
        
        for(int i=0; i<nums.size(); i++)
        {
            
            
            int needed = target - nums[i];
            
            if(map.count(needed)>0)
            {
                answer[0]=i;
                answer[1] = map[needed];
                return answer;
            }
            else
            {
                map.emplace(nums[i], i);
            }
        }
        
       
        
        return answer;
    }
};
